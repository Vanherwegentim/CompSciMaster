openapi: 3.0.3
info:
  title: Resto
  description: Delicious Meal API
  version: v1.0.0
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
  - url: http://localhost:8080
    description: Our Local Server
tags:
  - description: Everything about our delightful Resto Services
    name: Resto Service
paths:
  /meals:
    get:
      tags:
        - meals
      summary: Retrieve all meals
      description: Find all meals
      operationId: getMeals
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Meal'
        "404":
          description: No Meals found
    post:
      tags:
        - meals
      summary: Add a new meal
      description: Add a new meal
      operationId: addMeal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealUpdateRequest'
            example:
              name: 'Lasagna de la casa'
              description: "Garfield's favorite dish"
              kcal: 2000
              price: 7
              mealType: 'MEAT'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        '201':
          description: New Meal created
  /meals/{id}:
    get:
      tags:
        - meals
      summary: Get a meal by its id
      description: Get a meal by id description
      operationId: getMealById
      parameters:
        - name: id
          in: path
          description: Id of the meal
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found the meal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        "400":
          description: Invalid Id Supplied
        "404":
          description: Meal not found
    put:
      tags:
        - meals
      summary: Update existing meal
      description: Update existing meal
      operationId: updateMeal
      parameters:
        - name: id
          in: path
          description: Id of the meal
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealUpdateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        "400":
          description: Invalid Id Supplied
        "404":
          description: Meal not found
    delete:
      tags:
        - meals
      summary: Remove a meal
      description: Remove an existing meal
      operationId: deleteMeal
      parameters:
        - name: id
          in: path
          description: Id of the meal
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "400":
          description: Invalid Id Supplied
        "404":
          description: Meal not found
components:
  schemas:
    Meal:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the meal
          format: uuid
        name:
          type: string
          description: The name of the meal
        price:
          type: string
          description: The price of the meal
          format: double
        kcal:
          type: integer
          description: The energetic value of the meal
          format: int32
        description:
          type: string
          description: A description of the meal
        mealType:
          type: string
          description: The type of meal
          enum:
            - VEGAN
            - VEGGIE
            - MEAT
            - FISH
      required:
        - name
        - mealType
      description: A Delicious meal
    MealUpdateRequest:
      properties:
        name:
          type: string
          description: The name of the meal
        price:
          type: string
          description: The price of the meal
          format: double
        kcal:
          type: integer
          description: The energetic value of the meal
          format: int32
        description:
          type: string
          description: A description of the meal
        mealType:
          type: string
          description: The type of meal
          enum:
            - VEGAN
            - VEGGIE
            - MEAT
            - FISH
      required:
        - name
        - mealType
      description: Request body for a meal
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string